buildscript {
    ext {
        kotlinVersion = '1.3.21'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}


apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'

group = pluginGroup
version = pluginVersion

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/groups/public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'jitpack.io'
        url = 'https://jitpack.io'
    }
}


configurations {
    // configuration that holds jars to include in the jar
    compile.extendsFrom jarLibs
}

dependencies {

    compile(fileTree(libsDirName))

    compile 'org.spigotmc:spigot-api:1.8.8-R0.1-SNAPSHOT'
    compile ('com.github.tr7zw:Item-NBT-API:92c3e14d4a9b511402625d93e260dde9bf7b6d64'){
        exclude(group: "org.bstats")
    }

    compile "org.jetbrains.kotlin:kotlin-stdlib"
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.1"
    
    testCompileOnly "org.jetbrains.kotlin:kotlin-test"
    testCompileOnly "org.jetbrains.kotlin:kotlin-test-junit5"
    testCompileOnly "org.mockito:mockito-all:2.0.2-beta"
    testCompileOnly "org.junit.jupiter:junit-jupiter-api:5.3.1"


}

jar {
    from {
        configurations.jarLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

wrapper {
    gradleVersion = '5.2'
}


compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
        suppressWarnings = true
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
        suppressWarnings = true
    }
}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}
